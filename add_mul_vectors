class Vector():
    def __init__(self, *args):
        self.values = list([i for i in args if isinstance(i, int)])
        self.values.sort()

    def __str__(self):
        if len(self.values) == 0:
            return f"Пустой вектор"
        else:
            return f"Вектор({str(self.values)[1:-1]})"

    def __add__(self, other):
        if isinstance(other, int):
            return Vector(*[i + other for i in self.values])
        if isinstance(other, Vector):
            if len(other.values) == len(self.values):
                return Vector(*map(sum, zip(self.values, other.values)))
            else:
                return f"Сложение векторов разной длины недопустимо"
        else:
            return print(f"Вектор нельзя сложить с {other}")

    def __mul__(self, other):
        if isinstance(other, int):
            return Vector(*[i * other for i in self.values])
        if isinstance(other, Vector):
            if len(other.values) == len(self.values):
                return Vector(*[i * j for i,j in zip(self.values, other.values)])
            else:
                return f"Умножение векторов разной длины недопустимо"
        else:
            return print(f"Вектор нельзя умножать с {other}")
            
